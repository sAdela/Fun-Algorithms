/*Given an array of distinct integers. 
The task is to find all the triplets such that sum of two elements equals the third element.

Input:
The first line of input contains an integer T denoting the number of test cases. 
Then T test cases follow. Each test case consists of two lines. 
First line of each test case contains an Integer N denoting size of array and the second 
line contains N space separated elements.*/

#include<iostream>

void InsertionSort(int* niz, int velicina) {
	for (int i = 1; i < velicina; i++) {
		int j = i;
		while (j > 0 && niz[j - 1] > niz[j]) {
			auto pom = niz[j - 1];
			niz[j - 1] = niz[j];
			niz[j] = pom;
			j--;
		}
	}
}

void main() {

	int test, arraySize;
	std::cin >> test;
	for (int t = 0; t < test; t++) {

		std::cin >> arraySize;
		int *arr = new int[arraySize];
		for (int arrS = 0; arrS < arraySize; arrS++)
			std::cin >> arr[arrS];
	
		InsertionSort(arr, arraySize);

		for (int i = 0; i < arraySize; i++) {
			for (int j = 0; j < arraySize; j++) {
				for (int z = 0; z < j; z++) 

					if (arr[j] + arr[z] == arr[i])
						std::cout << arr[j] << " + " << arr[z] << " = " << arr[i] << std::endl;
				
			}
		}
			delete[] arr; 
	}

	system("pause>0");
}
